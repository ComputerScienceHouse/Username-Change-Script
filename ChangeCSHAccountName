#!/bin/bash
#
# Change user's username
# 
# This does not change db usernames because they might not have db users,
# also their username might be a system db user 
# aka dude can my username be net_user?
#
# Oh, and by the way this is tracked with git - please commit appropriately!
#
# 12/2010 - worr 	Original version

# Exits on non-zero line
# Thanks Russ! That's pretty baller
set -e

if [[ $# -ne 2 ]]; then
	echo "Usage: $0 <old username> <new username>"
	exit 1
fi

OLD_USERNAME=$1
NEW_USERNAME=$2

 id $NEW_USERNAME
if [[ $? -eq 0 ]]; then
	echo "New username $NEW_USERNAME already exists!"
	exit 1
fi

id $OLD_USERNAME
if [[ $? -ne 0 ]]; then
	echo "Old username $OLD_USERNAME does not exist!"
	exit 1
fi

echo -n "kadmin username: "
read KADMIN_USER

OLD_HOMEDIR=$(ypmatch $OLD_USERNAME passwd | cut -d: -f6)
NEW_HOMEDIR=$(echo $OLD_HOMEDIR | sed -e "s/$OLD_USERNAME/$NEW_USERNAME/")
OLD_KERB5_PRINC="$OLD_USERNAME@CSH.RIT.EDU"
NEW_KERB5_PRINC="$NEW_USERNAME@CSH.RIT.EDU"
OLD_WIKINAME=$(perl -e 'print ucfirst($OLD_USERNAME);') # Hahaha, using Perl for this shit #overkill
NEW_WIKINAME=$(perl -e 'print ucfirst($NEW_USERNAME);')
NIS_MAKE='ssh nis1 /root/ldap2nis/ldap2nis.sh'

LDAP_SERVER="ldap.csh.rit.edu"
KADMIN_CMD="/usr/bin/kadmin -p $KADMIN_USER/admin -q "
LOG_FILE="change_username.log"
VERIFICATION="Yes, I understand that what I'm doing can break everything for $OLD_USERNAME"

echo "Changing $OLD_USERNAME TO $NEW_USERNAME..." | tee -a $LOG_FILE
echo "THIS CAN BREAK EVERYTHING OMG ARE YOU SURE YOU WANT TO DO THIS?"
echo "Enter \"$VERIFICATION\" to continue"
echo -n "Prompt: "
read VERIPROMPT

if [[ $VERIFICATION != $VERIPROMPT ]]; then
	echo "Exiting..." | tee -a $LOG_FILE
	exit 0
fi

echo "Verification given. Proceeding with change." | tee -a $LOG_FILE

change_ldap_entry () {
	echo "Changing LDAP information..." | tee -a $LOG_FILE

	echo "dn: uid=$OLD_USERNAME,ou=Users,dc=csh,dc=rit,dc=edu
changetype: modrdn
newrdn: uid=$NEW_USERNAME
deleteoldrdn: 1

dn: uid=$NEW_USERNAME,ou=Users,dc=csh,dc=rit,dc=edu
changetype: modify
replace: homeDirectory
homeDirectory: /users/u18/$NEW_USERNAME
-
replace: krb5PrincipalName
krb5PrincipalName: $NEW_USERNAME@CSH.RIT.EDU
-
delete: mail
mail: $OLD_USERNAME@csh.rit.edu
-
add: mail
mail: $NEW_USERNAME@csh.rit.edu" | ldapmodify -Q -h $LDAP_SERVER
	
	$NIS_MAKE
	echo "Successfully changed LDAP entry" | tee -a $LOG_FILE

}

change_krb5_entry () {
	echo "Changing kerberos princ..." | tee -a $LOG_FILE
	$KADMIN_CMD "delprinc -force $OLD_USERNAME"
	$KADMIN_CMD "ank $NEW_USERNAME"

	echo "Successfully changed krb5 princ" | tee -a $LOG_FILE
}

move_home_directory () {
	echo "Moving home directory..." | tee -a $LOG_FILE
	if [[ -d $NEW_HOMEDIR ]]; then
		echo "$NEW_HOMEDIR already exists!?" | tee -a $LOG_FILE
		return 1
	fi

	mv $OLD_HOMEDIR $NEW_HOMEDIR

	echo "Successfully moved home directory" | tee -a $LOG_FILE
}

change_db_entries () {
	echo "You will be prompted twice for the root db password, and then start's net_user password. Steel yourself."

	# Change wiki username
	echo "Changing wiki username..." | tee -a $LOG_FILE
	mysql -u root -p wikidb -e "UPDATE user SET user_name = '$NEW_WIKINAME' WHERE user_name = '$OLD_WIKINAME';" -h db
	mysql -u root -p wikidb -e "UPDATE page SET page_title = '$NEW_WIKINAME' WHERE page_title = '$OLD_WIKINAME';" -h db
	echo "Successfully changed wiki username" | tee -a $LOG_FILE

	# START IS GONE - worr 9/7/11
	#echo "Changing username in start..." | tee -a $LOG_FILE
	#psql -U net_user -c "UPDATE hosts SET username = '$NEW_USERNAME' WHERE username = '$OLD_USERNAME';" -h db network
	#echo "Successfully changed start username" | tee -a $LOG_FILE
}

change_ldap_entry
change_krb5_entry
move_home_directory
change_db_entries

cat <<EOF

Hey, so now you might want to check with the user and see if they want to have
a mail alias redirecting mail from their old username to their new username.

You also might wanna check mailing list subscriptions, as well as DB accounts,
and see if their username needs to be changed anywhere else.

No srsly, ask them.

EOF
